
%implements GDFLIB_FilterIIR2_SF_FLT "C"

%% Function: BlockTypeSetup ===================================================
%% Abstract:
%%   Declare external variables and functions
%%
%function BlockTypeSetup(block, system) void

   %if !EXISTS("GDFLIB_INCLUDED")
      %assign ::GDFLIB_INCLUDED = 1
      %<LibCacheIncludes("#include \"gdflib.h\"" + "\n")>
   %endif 
   
   %assign ::cntIIR2 = 0
   %assign ::cntInitIIR2 = 0
   
%endfunction

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%  Start Function of S-Function 
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function Start(block, system) Output 

   %assign ::cntInitIIR2 = %<::cntInitIIR2> + 1
	 
%assign fFIRparams = LibCreateSourceFile("Source", "Custom", "FIRparams")
%openfile tmpParamBuf 
   %if !EXISTS("GDFLIB_INCLUDED_TO_FIRPARAM")
      %assign ::GDFLIB_INCLUDED_TO_FIRPARAM = 1
      #include "gdflib.h"
   %endif 
    GDFLIB_FILTER_IIR2_T trMyFilterIIR2_%<::cntInitIIR2> = GDFLIB_FILTER_IIR2_DEFAULT ;
%closefile tmpParamBuf
%<LibSetSourceFileSection(fFIRparams , "Definitions", tmpParamBuf)>

    %assign B0   = CAST("Real32",Parameter[0].Value[0])
    %assign B1   = CAST("Real32",Parameter[1].Value[0])
    %assign B2   = CAST("Real32",Parameter[2].Value[0])
    %assign A1   = CAST("Real32",Parameter[3].Value[0])
    %assign A2   = CAST("Real32",Parameter[4].Value[0])
	
	trMyFilterIIR2_%<::cntInitIIR2>.trFiltCoeff.s32B0 = %<B0>;  
	trMyFilterIIR2_%<::cntInitIIR2>.trFiltCoeff.s32B1 = %<B1>; 
	trMyFilterIIR2_%<::cntInitIIR2>.trFiltCoeff.s32B2 = %<B2>; 
	trMyFilterIIR2_%<::cntInitIIR2>.trFiltCoeff.s32A1 = %<A1>;
	trMyFilterIIR2_%<::cntInitIIR2>.trFiltCoeff.s32A2 = %<A2>;
	 
    GDFLIB_FilterIIR2Init (&trMyFilterIIR2_%<::cntInitIIR2>);
   
%openfile tmpParamExternBuf 
    extern GDFLIB_FILTER_IIR2_T trMyFilterIIR2_%<::cntInitIIR2>;
%closefile tmpParamExternBuf
%<LibCacheExtern(tmpParamExternBuf)>   
   
%endfunction

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%  Outputs Function of S-Function 
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Function: Outputs ==========================================================
%% Abstract:
%%
%function Outputs(block, system) Output

    %assign ::cntIIR2 = %<::cntIIR2> + 1
   
    %assign x = LibBlockInputSignal(0, "", "", 0)
    %assign y = LibBlockOutputSignal(0, "", "", 0)
    %assign y1 = LibBlockOutputSignal(1, "", "", 0)
    %assign y2 = LibBlockOutputSignal(2, "", "", 0)
    %assign y3 = LibBlockOutputSignal(3, "", "", 0)
    %assign y4 = LibBlockOutputSignal(4, "", "", 0)
   
    %<y> = GDFLIB_FilterIIR2 (%<x>,&trMyFilterIIR2_%<::cntIIR2>);
	%<y1> = trMyFilterIIR2_%<::cntIIR2>.s32FiltBufferX[1];
	%<y2> = trMyFilterIIR2_%<::cntIIR2>.s32FiltBufferX[2];
	%<y3> = trMyFilterIIR2_%<::cntIIR2>.s32FiltBufferY[1];
	%<y4> = trMyFilterIIR2_%<::cntIIR2>.s32FiltBufferY[2];

%endfunction
