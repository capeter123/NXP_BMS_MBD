%implements can_564xl_receive_data "C"

%% Function: BlockTypeSetup ===================================================
%% Abstract:
%%   Declare external variables and functions
%%
%function BlockTypeSetup(block, system) void

%if (CompiledModel.ConfigSet.SystemTargetFile == "rappid564xl.tlc")
  %if !EXISTS("FLEXCAN_564xL_INCLUDED")
    %assign ::FLEXCAN_564xL_INCLUDED = 1
    %<LibCacheIncludes("#include \"flexcan_564xl_library.h\"" + "\n")>
   %endif 
%endif 

%endfunction

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%  Start Function of S-Function 
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function Start(block, system) Output
%if (CompiledModel.ConfigSet.SystemTargetFile == "rappid564xl.tlc")
%assign flexcan = CAST("Number",  Parameter[0].Value[0])
%assign buf 	= CAST("Number",  Parameter[1].Value[0])
%assign id 		= CAST("Unsigned",Parameter[2].Value[0])

{
	if ( (%<id> & 0x1FFFF800) != 0x0) { //extended tag
		flexcan_564xl_set_filter_id(%<flexcan-1>, %<buf-1>, %<id>, 1);
	}
	else { //standart tag
		flexcan_564xl_set_filter_id(%<flexcan-1>, %<buf-1>, %<id>, 0);
	}
	
}
%endif
%endfunction


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Function: Outputs ==========================================================
%% Abstract:
%%
%function Outputs(block, system) Output

%if (CompiledModel.ConfigSet.SystemTargetFile == "rappid564xl.tlc")
	%assign flexcan = CAST("Number",Parameter[0].Value[0])
	%assign buf = CAST("Number",Parameter[1].Value[0])
	%assign id = CAST("Number",Parameter[2].Value[0])
	
	%assign FinalID = LibBlockOutputSignal(0, "", "", 0)
	%assign Finalidtype =  LibBlockOutputSignal(1, "", "", 0)
    %assign FinalTS = LibBlockOutputSignal(3, "", "", 0)

	{
		FLEXCAN_MsgBufferStructure *ptr_FLEXCAN_MsgBufferStructure;
        FLEXCAN_MsgBufferStructure str_FLEXCAN_MsgBufferStructure;
		
		uint8_t i = 0U;
		
		ptr_FLEXCAN_MsgBufferStructure = &(str_FLEXCAN_MsgBufferStructure);
		memset(ptr_FLEXCAN_MsgBufferStructure,0,sizeof(*ptr_FLEXCAN_MsgBufferStructure));
		
		if (flexcan_564xl_rxbuffull( %<flexcan-1>, %<buf-1>))
		{
			%<LibBlockOutputSignal(0, "", "", 0)> = flexcan_564xl_get_id(%<flexcan-1>, %<buf-1>);
			flexcan_564xl_get_mb(ptr_FLEXCAN_MsgBufferStructure, %<flexcan-1>, %<buf-1>);
			
			for(i=0;i<ptr_FLEXCAN_MsgBufferStructure->length;i++)
            {
                (%<LibBlockOutputSignalAddr(2, "", "", 0)>)[i] = ptr_FLEXCAN_MsgBufferStructure->data[i];
            }
			
			%<LibBlockOutputSignal(1, "", "", 0)> = flexcan_564xl_get_idtype(%<flexcan-1>, %<buf-1>);
			%<LibBlockOutputSignal(3, "", "", 0)> = flexcan_564xl_get_ts(%<flexcan-1>, %<buf-1>);
			
			flexcan_564xl_release_mb_lock(%<flexcan-1>);
			flexcan_564xl_clear_mask(%<flexcan-1>, %<buf-1>);
		
		}
	}
%endif 

%endfunction
